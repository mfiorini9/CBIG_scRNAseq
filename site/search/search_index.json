{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CBIG Single-cell/spatial RNA seq processing documentation Introduction This documentation provides a step-by-step guide to our standardized pipelines for preprocessing RNA sequencing (RNAseq) data prior to upload to the C-BIG repository. It is intended for original investigators who wish to contribute their data to C-BIG and want to understand how their data is processed beforehand, as well as for system administrators responsible for executing the pipelines prior to upload. The following pipelines are currently supported and covered in this documentation: Single-cell RNA sequencing (10X genomics) Spatial RNA sequencing (Visium HD) These pipelines are actively maintained and undergo ongoing optimization at the Montreal Neurological Institute. We welcome feedback and contributions as part of our collaborative data-sharing efforts. Additional pipelines for other sequencing platforms will be added soon. If you are interested in making your single-cell or spatial RNAseq data available through the C-BIG repository, please contact Michael Fiorini . Contents Initiative overview: Background Standardized processing protocols Available data Single-Cell RNA seq: 10X Genomics ParseBiosciences Spatial RNA seq: Visium HD Visium About: Help and Feedback Acknowledgement License","title":"Home"},{"location":"#cbig-single-cellspatial-rna-seq-processing-documentation","text":"","title":"CBIG Single-cell/spatial RNA seq processing documentation"},{"location":"#introduction","text":"This documentation provides a step-by-step guide to our standardized pipelines for preprocessing RNA sequencing (RNAseq) data prior to upload to the C-BIG repository. It is intended for original investigators who wish to contribute their data to C-BIG and want to understand how their data is processed beforehand, as well as for system administrators responsible for executing the pipelines prior to upload. The following pipelines are currently supported and covered in this documentation: Single-cell RNA sequencing (10X genomics) Spatial RNA sequencing (Visium HD) These pipelines are actively maintained and undergo ongoing optimization at the Montreal Neurological Institute. We welcome feedback and contributions as part of our collaborative data-sharing efforts. Additional pipelines for other sequencing platforms will be added soon. If you are interested in making your single-cell or spatial RNAseq data available through the C-BIG repository, please contact Michael Fiorini .","title":"Introduction"},{"location":"#contents","text":"Initiative overview: Background Standardized processing protocols Available data Single-Cell RNA seq: 10X Genomics ParseBiosciences Spatial RNA seq: Visium HD Visium About: Help and Feedback Acknowledgement License","title":"Contents"},{"location":"Available_data/","text":"Available data FASTQ files Feature-barcode expression matrix Seurat and Scanpy objects Metadata For each scRNAseq study hosted on C-BIG, we provide both raw and processed data at various stages of the processing pipeline. Specifically, each study includes the following: Raw FASTQ files for each sample (.fastq); A unified feature-barcode expression matrix (barcodes.tsv, features.tsv, matrix.mtx); A unified Seurat object (.RDS); A standardized metadata file provided by the authors (.csv) Ensuring the availability of multiple data types provides C-BIG users with the flexibility to choose the most appropriate data for their specific analytical needs. We further describe each data type in the subsequent sections. FASTQ files Independent FASTQ files for each sample obtained directly from the original investigators are uploaded to C-BIG. The FASTQ files contain raw sequence reads, which, in the context of scRNAseq, represent transcriptomic data from individual cells. The FASTQ files are published without modification; however, their naming is adjusted according to standard 10xGenomics nomenclature: [Sample Name]_S1_L00[Lane Number]_[Read Type]_001.fastq.gz Where Read Type is one of: R1: Read 1 R2: Read 2 For example, in a scRNAseq study involving two distinct samples sequenced using paired-end technology, where each sample represents a different individual\u2014Parkinson1 and Control1\u2014the following FASTQ files will be available: Parkinson1 \u251c\u2500\u2500 Parkinson1_S1_L001_R1_001.fastq.gz \u2514\u2500\u2500 Parkinson1_S1_L001_R2_001.fastq.gz Control1 \u251c\u2500\u2500 Control1_S1_L001_R1_001.fastq.gz \u2514\u2500\u2500 Control1_S1_L001_R2_001.fastq.gz Raw FASTQ files are best suited for investigators aiming to replicate the original study\u2019s findings and apply the exact processing methods described in the manuscript. Feature-barcode expression matrix A single feature-barcode expression matrix for each study is uploaded to C-BIG. This matrix consists of three files: barcodes.tsv, features.tsv, and matrix.mtx, which collectively map the read counts of specific genes (features) to individual cells (barcodes). The feature-barcode expression matrix is derived from the unified Seurat object generated using the standardized pipeline described above. Regardless of the number of samples or subjects included in the study, the following files will be available: barcodes.tsv.gz features.tsv.gz matrix.mtx.gz The feature-barcode expression matrix is best suited for investigators who wish to perform a comprehensive analysis of the data without the need to run the time-consuming and memory-intensive CellRanger counts pipeline. Additionally, the feature-barcode expression matrix can be imported into R for analysis using various single-cell frameworks, such as SingleCellExperiment, or into Scanpy in Python, depending on the user\u2019s preference. Seurat and Scanpy objects A unified Seurat object in R Data Serialization format (RDS) obtained using the pipeline described above is uploaded to C-BIG. Seurat objects store all the data and metadata associated with scRNAseq analysis, including gene expression data and cell-level metadata. To maintain clarity and avoid ambiguity, we intentionally keep the uploaded Seurat object simple, including only the raw, normalized, and scaled RNA assays, as well as the author-provided metadata. This approach ensures that users have the flexibility to perform their own analyses\u2014such as dimensionality reduction, clustering, and differential gene expression\u2014without being constrained by predefined steps. Regardless of the number of samples or subjects included in the study, the following file will be available: seurat.RDS scanpy.h5ad The unified Seurat object is best suited for investigators familiar with R and the Seurat framework who wish to perform a comprehensive analysis of the data without the need to run the time-consuming and memory-intensive CellRanger counts pipeline. Metadata An author-provided metadata file for each scRNAseq study is uploaded to C-BIG. The metadata file is standardized to reduce confusion for external investigators, ensuring that essential cell-level information is provided for effective use of the data. Specifically, each metadata file will contain, at the very minimum, the following columns: Column name Description barcodes_CBIG Cell barcodes orig.ident_CBIG Sample identifiers matching those in the FASTQ nomenclature nCount_RNA_CBIG Number of RNA counts per cell when processed by the CBIG pipeline nFeature_RNA_CBIG Number of features expressed per cell when processed by the CBIG pipeline sample_id_CBIG Sample identifier subect_id_CBIG Subject identifier cell_type_main_CBIG Primary cell type annotation disease_status_CBIG Subject disease status Tissue_CBIG Tissue from which individuals cells derived","title":"Available data"},{"location":"Available_data/#available-data","text":"FASTQ files Feature-barcode expression matrix Seurat and Scanpy objects Metadata For each scRNAseq study hosted on C-BIG, we provide both raw and processed data at various stages of the processing pipeline. Specifically, each study includes the following: Raw FASTQ files for each sample (.fastq); A unified feature-barcode expression matrix (barcodes.tsv, features.tsv, matrix.mtx); A unified Seurat object (.RDS); A standardized metadata file provided by the authors (.csv) Ensuring the availability of multiple data types provides C-BIG users with the flexibility to choose the most appropriate data for their specific analytical needs. We further describe each data type in the subsequent sections.","title":"Available data"},{"location":"Available_data/#fastq-files","text":"Independent FASTQ files for each sample obtained directly from the original investigators are uploaded to C-BIG. The FASTQ files contain raw sequence reads, which, in the context of scRNAseq, represent transcriptomic data from individual cells. The FASTQ files are published without modification; however, their naming is adjusted according to standard 10xGenomics nomenclature: [Sample Name]_S1_L00[Lane Number]_[Read Type]_001.fastq.gz Where Read Type is one of: R1: Read 1 R2: Read 2 For example, in a scRNAseq study involving two distinct samples sequenced using paired-end technology, where each sample represents a different individual\u2014Parkinson1 and Control1\u2014the following FASTQ files will be available: Parkinson1 \u251c\u2500\u2500 Parkinson1_S1_L001_R1_001.fastq.gz \u2514\u2500\u2500 Parkinson1_S1_L001_R2_001.fastq.gz Control1 \u251c\u2500\u2500 Control1_S1_L001_R1_001.fastq.gz \u2514\u2500\u2500 Control1_S1_L001_R2_001.fastq.gz Raw FASTQ files are best suited for investigators aiming to replicate the original study\u2019s findings and apply the exact processing methods described in the manuscript.","title":"FASTQ files"},{"location":"Available_data/#feature-barcode-expression-matrix","text":"A single feature-barcode expression matrix for each study is uploaded to C-BIG. This matrix consists of three files: barcodes.tsv, features.tsv, and matrix.mtx, which collectively map the read counts of specific genes (features) to individual cells (barcodes). The feature-barcode expression matrix is derived from the unified Seurat object generated using the standardized pipeline described above. Regardless of the number of samples or subjects included in the study, the following files will be available: barcodes.tsv.gz features.tsv.gz matrix.mtx.gz The feature-barcode expression matrix is best suited for investigators who wish to perform a comprehensive analysis of the data without the need to run the time-consuming and memory-intensive CellRanger counts pipeline. Additionally, the feature-barcode expression matrix can be imported into R for analysis using various single-cell frameworks, such as SingleCellExperiment, or into Scanpy in Python, depending on the user\u2019s preference.","title":"Feature-barcode expression matrix"},{"location":"Available_data/#seurat-and-scanpy-objects","text":"A unified Seurat object in R Data Serialization format (RDS) obtained using the pipeline described above is uploaded to C-BIG. Seurat objects store all the data and metadata associated with scRNAseq analysis, including gene expression data and cell-level metadata. To maintain clarity and avoid ambiguity, we intentionally keep the uploaded Seurat object simple, including only the raw, normalized, and scaled RNA assays, as well as the author-provided metadata. This approach ensures that users have the flexibility to perform their own analyses\u2014such as dimensionality reduction, clustering, and differential gene expression\u2014without being constrained by predefined steps. Regardless of the number of samples or subjects included in the study, the following file will be available: seurat.RDS scanpy.h5ad The unified Seurat object is best suited for investigators familiar with R and the Seurat framework who wish to perform a comprehensive analysis of the data without the need to run the time-consuming and memory-intensive CellRanger counts pipeline.","title":"Seurat and Scanpy objects"},{"location":"Available_data/#metadata","text":"An author-provided metadata file for each scRNAseq study is uploaded to C-BIG. The metadata file is standardized to reduce confusion for external investigators, ensuring that essential cell-level information is provided for effective use of the data. Specifically, each metadata file will contain, at the very minimum, the following columns: Column name Description barcodes_CBIG Cell barcodes orig.ident_CBIG Sample identifiers matching those in the FASTQ nomenclature nCount_RNA_CBIG Number of RNA counts per cell when processed by the CBIG pipeline nFeature_RNA_CBIG Number of features expressed per cell when processed by the CBIG pipeline sample_id_CBIG Sample identifier subect_id_CBIG Subject identifier cell_type_main_CBIG Primary cell type annotation disease_status_CBIG Subject disease status Tissue_CBIG Tissue from which individuals cells derived","title":"Metadata"},{"location":"SPP/","text":"Standardized processing protocol A general outline of the RNAseq processing pipelines for data uploaded to C-BIG is illustrated in Figure 1. All analytical steps are carried out using the scRNAbox pipeline (1) and require collaborative input from both the original investigators and the administrators (The NeuroBioinformatics Core). Figure 1. General workflow of standardized preprocessing framework. The pipeline begins with raw sequencing files in FASTQ format, obtained from commercial platforms such as 10xGenomics. Investigators looking to upload their data must send the sample-specific FASTQ files to the administrators. The sample-specific FASTQ files are processed to generate feature-barcode expression matrices with default parameters. Intronic reads are optionally retained depending on the author\u2019s original protocol and the sequences are aligned to the GRCh38 reference genome. During this step, the sample-specific FASTQ files provided by the investigator are renamed to include descriptive sample identifiers, following the standard 10xGenomics nomenclature (for further details, see Available Data). The feature-barcode expression matrices are used to generate sample-specific Seurat (v5.1.0) objects. Seurat is an R-based package designed for the analysis and visualization of RNAseq data (2). Initially, a separate Seurat object is created for each sample. These individual Seurat objects undergo basic preprocessing steps, including log normalization and scaling. To ensure that the quality control thresholds match that of the original study, we filter the Seurat object to only retain barcodes in the author-provided metadata file. Upon processing the sample-specific Seurat objects, we generate a unified Seurat object that includes all samples in the study by merging the RNA counts layer. Finally, we add the author-provided metadata to the unified Seurat object. This unified Seurat object is made available on C-BIG and used to generate a single feature-barcode expression matrix describing all samples in the study, as well as a Scanpy (Python) object. The code is available on GitHub . References Thomas, Rhalena A., Michael R. Fiorini, Saeid Amiri, Edward A. Fon, and Sali MK Farhan. \"ScRNAbox: empowering single-cell RNA sequencing on high performance computing systems.\" BMC bioinformatics 25, no. 1 (2024): 319. Hao, Yuhan, Tim Stuart, Madeline H. Kowalski, Saket Choudhary, Paul Hoffman, Austin Hartman, Avi Srivastava et al. \"Dictionary learning for integrative, multimodal and scalable single-cell analysis.\" Nature biotechnology 42, no. 2 (2024): 293-304.","title":"Standardized processing protocols"},{"location":"SPP/#standardized-processing-protocol","text":"A general outline of the RNAseq processing pipelines for data uploaded to C-BIG is illustrated in Figure 1. All analytical steps are carried out using the scRNAbox pipeline (1) and require collaborative input from both the original investigators and the administrators (The NeuroBioinformatics Core). Figure 1. General workflow of standardized preprocessing framework. The pipeline begins with raw sequencing files in FASTQ format, obtained from commercial platforms such as 10xGenomics. Investigators looking to upload their data must send the sample-specific FASTQ files to the administrators. The sample-specific FASTQ files are processed to generate feature-barcode expression matrices with default parameters. Intronic reads are optionally retained depending on the author\u2019s original protocol and the sequences are aligned to the GRCh38 reference genome. During this step, the sample-specific FASTQ files provided by the investigator are renamed to include descriptive sample identifiers, following the standard 10xGenomics nomenclature (for further details, see Available Data). The feature-barcode expression matrices are used to generate sample-specific Seurat (v5.1.0) objects. Seurat is an R-based package designed for the analysis and visualization of RNAseq data (2). Initially, a separate Seurat object is created for each sample. These individual Seurat objects undergo basic preprocessing steps, including log normalization and scaling. To ensure that the quality control thresholds match that of the original study, we filter the Seurat object to only retain barcodes in the author-provided metadata file. Upon processing the sample-specific Seurat objects, we generate a unified Seurat object that includes all samples in the study by merging the RNA counts layer. Finally, we add the author-provided metadata to the unified Seurat object. This unified Seurat object is made available on C-BIG and used to generate a single feature-barcode expression matrix describing all samples in the study, as well as a Scanpy (Python) object. The code is available on GitHub . References Thomas, Rhalena A., Michael R. Fiorini, Saeid Amiri, Edward A. Fon, and Sali MK Farhan. \"ScRNAbox: empowering single-cell RNA sequencing on high performance computing systems.\" BMC bioinformatics 25, no. 1 (2024): 319. Hao, Yuhan, Tim Stuart, Madeline H. Kowalski, Saket Choudhary, Paul Hoffman, Austin Hartman, Avi Srivastava et al. \"Dictionary learning for integrative, multimodal and scalable single-cell analysis.\" Nature biotechnology 42, no. 2 (2024): 293-304.","title":"Standardized processing protocol"},{"location":"SpatialRNAseq_Visium/","text":"Spatial RNAseq pipeline: 10X Genomics Visium Coming soon.","title":"Visium"},{"location":"SpatialRNAseq_Visium/#spatial-rnaseq-pipeline-10x-genomics-visium","text":"Coming soon.","title":"Spatial RNAseq pipeline: 10X Genomics Visium"},{"location":"SpatialRNAseq_Visium_HD/","text":"Spatial RNAseq pipeline: 10X Genomics Visium HD Installation Step 0: Pipeline Set Up Step 1: Run SpaceRanger Step 2: Data Preprocessing and Standardization Data upload to C-BIG This tutorial provides step-by-step instructions for preparing Visium HD spatial RNA sequencing data from 10X Genomics for upload to the C-BIG repository. Installation To use the C-BIG RNAseq proessing pipeline, the CBIG_scRNAseq GitHub repository must be cloned onto your high performance computing (HPC) system. Administrators using the Digital Research Alliance of Canada HPC system can skip this step, as the pipeline is already installed on Narval at /lustre07/scratch/fiorini9/CBIG_pipe_07_11_25/CBIG_scRNAseq/cbig_scrna.slurm . Note that this is a temporary location. To clone the repository run the following code: mkdir /path/to/pipeline cd /path/to/pipeline git clone https://github.com/mfiorini9/CBIG_scRNAseq After running the above code, the following files will be available in /path/to/pipeline : CBIG_scRNAseq \u251c\u2500\u2500 cbig_scrna.slurm \u2502 \u251c\u2500\u2500 launch \u2502 \u2502 \u2514\u2500\u2500 launch_cbig_scrna_slurm.sh \u2502 \u251c\u2500\u2500 launch_cbig_scrna.sh \u2502 \u251c\u2500\u2500 scrna \u2502 \u2502 \u251c\u2500\u2500 configs \u2502 \u2502 \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u2502 \u2502 \u251c\u2500\u2500 pars \u2502 \u2502 \u2502 \u2514\u2500\u2500 parameters.txt \u2502 \u2502 \u2514\u2500\u2500 scripts \u2502 \u2502 \u251c\u2500\u2500 step1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_cellranger_scrna_local.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_cellranger_scrna.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 scrna_step1_auto.R \u2502 \u2502 \u2502 \u2514\u2500\u2500 slurm.template \u2502 \u2502 \u251c\u2500\u2500 step2 \u2502 \u2502 \u2502 \u251c\u2500\u2500 pipeline_step2.sh \u2502 \u2502 \u2502 \u2514\u2500\u2500 scrna_step2.R \u2502 \u2502 \u251c\u2500\u2500 step3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_spaceranger_scrna.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 scrna_step3_auto.R \u2502 \u2502 \u2502 \u2514\u2500\u2500 slurm.template \u2502 \u2502 \u2514\u2500\u2500 step4 \u2502 \u2502 \u251c\u2500\u2500 pipeline_step4.sh \u2502 \u2502 \u251c\u2500\u2500 spatial_rna_step4.py \u2502 \u2502 \u2514\u2500\u2500 spatial_rna_step4.R \u2502 \u251c\u2500\u2500 soft \u2502 \u2502 \u2514\u2500\u2500 R \u2502 \u2502 \u251c\u2500\u2500 install_packages.R \u2502 \u2502 \u251c\u2500\u2500 install_packages.sh \u2502 \u2502 \u2514\u2500\u2500 R.library.ini \u2502 \u2514\u2500\u2500 tools \u2502 \u2514\u2500\u2500 utils.sh \u251c\u2500\u2500 LICENSE \u2514\u2500\u2500 README.md Note: The repository only needs to be cloned onto an HPC system once and can be used to process any number of independent datasets. Step 0: Pipeline Set Up After installation, a working directory and a pipeline instance specific to the dataset being processed must be created. Step 0 initiates the pipeline and generates all necessary parameter and configuration files. To execute Step 0, run the following code: mkdir /path/to/working/directory/Dataset1 cd /path/to/working/directory/Dataset1 PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 0 After running the Step 0, the following files will be available in /path/to/working/directory/Dataset1 : Dataset1 \u2514\u2500\u2500 job_info \u251c\u2500\u2500 configs \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 step_3_spacerangerV1_Adult_Mouse_Brain_S5.log \u251c\u2500\u2500 parameters \u2502 \u2514\u2500\u2500 parameters.txt \u2514\u2500\u2500 summary_report.txt The configs/ directory contains a configuration file which allows users to specify their job allocations (memory, threads, and walltime) for each analytical step using the Slurm Workload Manager; The logs/ directory records the events of each analytical step; The parameters/ directory contains adjustable, step-specific text files which allow users to define the execution parameters for each analytical step. Note: The text files can be opened and modified through nano, vim, or a file manager system like cyberduck. Step 1: Run SpaceRangerer In Step 1, spatial gene expression matrices are generated from 10X Genomics FASTQ files provided by the original investigators using the SpaceRanger counts pipeline. The following parameters are adjustable for Step 1 of the spatial RNAseq Visium HD track ( /path/to/working/directory/Dataset1/job_info/parameters/parameters.txt ): Column name Default Description par_automated_library_prep_spaceranger Yes Whether or not to perform automated library prep. Alternatively, you may set this parameter to \"no\" and manually prepare the libraries. par_fastq_directory_spaceranger NULL Path to directory containing the FASTQ files. This directory should only contain FASTQ files for the experiment. par_sample_names_spaceranger NULL The sample names used to name the FASTQ files according to CellRanger nomeclature. par_rename_sample_spacerangers Yes Whether or not you want to rename your samples. These names will be used to identify cells in the processed data objects. par_new_sample_names_spaceranger NULL New sample names. Make sure they are defined in the same order as 'par_sample_names'. par_paired_end_seq_spaceranger Yes Whether or not paired-end sequencing was performed. par_ref_dir_grch_spaceranger /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh38/genome/10xGenomics/refdata-cellranger-GRCh38-3.0.0 Path to reference genome for FASTQ alignment. 10X Genomics reference genomes are available for download. For more information see the 10X Genomics documentation. par_fastqs_spaceranger NULL Path to directory containing the FASTQ files. This directory should only contain FASTQ files for the experiment. par_image_spaceranger NULL Path to the brightfield tissue image (.tif) for the corresponding tissue section. par_slide_spaceranger NULL Identifier for the Visium slide used. This must match the slide ID printed on the physical slide and encoded in the .gpr file. par_slidefile_spaceranger TEMP Path to the GenePix results (.gpr) file for the slide, which contains spatial barcode layout information. It's used to map tissue spots to spatial barcodes. par_area_spaceranger NULL Indicates the capture area (i.e., section) of the slide being processed. Commonly labeled as A1, B1, C1, D1, etc. This must match the area used for imaging and sample preparation. par_localcores_spaceranger 16 Number of CPU cores to use for the analysis. par_localmem_spaceranger=10 10 Amount of RAM (in GB) to allocate to the job. Given that SpaceRanger runs a user interface, it is recommended to run Step 1 in a screen , which will allow the the task to keep running if the connection to the HPC is broken. To execute Step 1, run the following code: screen -S pipeline PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 3 The resulting output files are deposited into /path/to/working/directory/Dataset1/step1 . The filtered expression matrix, features, and barcode files outputed by SpaceRanger are located in /path/to/working/directory/Dataset1/step3/sample/ouput_folder/outs/filtered_feature_bc_matrix . Note: If SpaceRanger was successfull, it will display Pipestance completed successfully! . If this message is not displayed, you should check the error logs in /path/to/working/directory/Dataset1/step3/sample/ouput_folder.log and re-run Step 1. Step 2: Data Preprocessing and Standardization In Step 2, the spatial feature-barcode expression matrices are log-transformed and scaled using a standardized approach. Individual cells are filtered to retain only those barcodes specified in the metadata file provided by the original investigators. Metadata column names are standardized and appended to the count matrices. The processed data are saved as both Seurat and Scanpy objects. The following parameters are adjustable for Step 2 of the spatial RNAseq Visium HD track ( /path/to/working/directory/Dataset1/job_info/parameters/parameters.txt ): Column name Default Description par_meta_data_spatial NULL Path to investigator-provided metadata .csv file. par_barcodes_spatial NULL Column name in the investigator-provided metadata file describing the cell barcodes. par_sample_id_spatial NULL Column name in the investigator-provided metadata file describing the sample IDs. par_subject_id_spatial NULL Column name in the investigator-provided metadata file describing the Subject IDs. par_tissue_spatial NULL Column name in the investigator-provided metadata file describing the tissue type. par_tissue_region_spatial NULL Column name in the investigator-provided metadata file describing the tissue region. par_cell_type_main_spatial NULL Column name in the investigator-provided metadata file describing the main cell type. par_disease_status_main_spatial NULL Column name in the investigator-provided metadata file describing the disease status of the subject from which the cells were obtained. To execute Step 2, run the following code: PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 4 After running the Step 2, the following files will be available in /path/to/working/directory/Dataset1/step4 : Dataset1 \u2514\u2500\u2500 job_info \u251c\u2500\u2500 configs \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 step_3_spacerangerV1_Adult_Mouse_Brain_S5.log \u251c\u2500\u2500 parameters \u2502 \u2514\u2500\u2500 parameters.txt \u2514\u2500\u2500 summary_report.txt Data upload to C-BIG","title":"Visium HD"},{"location":"SpatialRNAseq_Visium_HD/#spatial-rnaseq-pipeline-10x-genomics-visium-hd","text":"Installation Step 0: Pipeline Set Up Step 1: Run SpaceRanger Step 2: Data Preprocessing and Standardization Data upload to C-BIG This tutorial provides step-by-step instructions for preparing Visium HD spatial RNA sequencing data from 10X Genomics for upload to the C-BIG repository.","title":"Spatial RNAseq pipeline: 10X Genomics Visium HD"},{"location":"SpatialRNAseq_Visium_HD/#installation","text":"To use the C-BIG RNAseq proessing pipeline, the CBIG_scRNAseq GitHub repository must be cloned onto your high performance computing (HPC) system. Administrators using the Digital Research Alliance of Canada HPC system can skip this step, as the pipeline is already installed on Narval at /lustre07/scratch/fiorini9/CBIG_pipe_07_11_25/CBIG_scRNAseq/cbig_scrna.slurm . Note that this is a temporary location. To clone the repository run the following code: mkdir /path/to/pipeline cd /path/to/pipeline git clone https://github.com/mfiorini9/CBIG_scRNAseq After running the above code, the following files will be available in /path/to/pipeline : CBIG_scRNAseq \u251c\u2500\u2500 cbig_scrna.slurm \u2502 \u251c\u2500\u2500 launch \u2502 \u2502 \u2514\u2500\u2500 launch_cbig_scrna_slurm.sh \u2502 \u251c\u2500\u2500 launch_cbig_scrna.sh \u2502 \u251c\u2500\u2500 scrna \u2502 \u2502 \u251c\u2500\u2500 configs \u2502 \u2502 \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u2502 \u2502 \u251c\u2500\u2500 pars \u2502 \u2502 \u2502 \u2514\u2500\u2500 parameters.txt \u2502 \u2502 \u2514\u2500\u2500 scripts \u2502 \u2502 \u251c\u2500\u2500 step1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_cellranger_scrna_local.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_cellranger_scrna.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 scrna_step1_auto.R \u2502 \u2502 \u2502 \u2514\u2500\u2500 slurm.template \u2502 \u2502 \u251c\u2500\u2500 step2 \u2502 \u2502 \u2502 \u251c\u2500\u2500 pipeline_step2.sh \u2502 \u2502 \u2502 \u2514\u2500\u2500 scrna_step2.R \u2502 \u2502 \u251c\u2500\u2500 step3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_spaceranger_scrna.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 scrna_step3_auto.R \u2502 \u2502 \u2502 \u2514\u2500\u2500 slurm.template \u2502 \u2502 \u2514\u2500\u2500 step4 \u2502 \u2502 \u251c\u2500\u2500 pipeline_step4.sh \u2502 \u2502 \u251c\u2500\u2500 spatial_rna_step4.py \u2502 \u2502 \u2514\u2500\u2500 spatial_rna_step4.R \u2502 \u251c\u2500\u2500 soft \u2502 \u2502 \u2514\u2500\u2500 R \u2502 \u2502 \u251c\u2500\u2500 install_packages.R \u2502 \u2502 \u251c\u2500\u2500 install_packages.sh \u2502 \u2502 \u2514\u2500\u2500 R.library.ini \u2502 \u2514\u2500\u2500 tools \u2502 \u2514\u2500\u2500 utils.sh \u251c\u2500\u2500 LICENSE \u2514\u2500\u2500 README.md Note: The repository only needs to be cloned onto an HPC system once and can be used to process any number of independent datasets.","title":"Installation"},{"location":"SpatialRNAseq_Visium_HD/#step-0-pipeline-set-up","text":"After installation, a working directory and a pipeline instance specific to the dataset being processed must be created. Step 0 initiates the pipeline and generates all necessary parameter and configuration files. To execute Step 0, run the following code: mkdir /path/to/working/directory/Dataset1 cd /path/to/working/directory/Dataset1 PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 0 After running the Step 0, the following files will be available in /path/to/working/directory/Dataset1 : Dataset1 \u2514\u2500\u2500 job_info \u251c\u2500\u2500 configs \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 step_3_spacerangerV1_Adult_Mouse_Brain_S5.log \u251c\u2500\u2500 parameters \u2502 \u2514\u2500\u2500 parameters.txt \u2514\u2500\u2500 summary_report.txt The configs/ directory contains a configuration file which allows users to specify their job allocations (memory, threads, and walltime) for each analytical step using the Slurm Workload Manager; The logs/ directory records the events of each analytical step; The parameters/ directory contains adjustable, step-specific text files which allow users to define the execution parameters for each analytical step. Note: The text files can be opened and modified through nano, vim, or a file manager system like cyberduck.","title":"Step 0: Pipeline Set Up"},{"location":"SpatialRNAseq_Visium_HD/#step-1-run-spacerangerer","text":"In Step 1, spatial gene expression matrices are generated from 10X Genomics FASTQ files provided by the original investigators using the SpaceRanger counts pipeline. The following parameters are adjustable for Step 1 of the spatial RNAseq Visium HD track ( /path/to/working/directory/Dataset1/job_info/parameters/parameters.txt ): Column name Default Description par_automated_library_prep_spaceranger Yes Whether or not to perform automated library prep. Alternatively, you may set this parameter to \"no\" and manually prepare the libraries. par_fastq_directory_spaceranger NULL Path to directory containing the FASTQ files. This directory should only contain FASTQ files for the experiment. par_sample_names_spaceranger NULL The sample names used to name the FASTQ files according to CellRanger nomeclature. par_rename_sample_spacerangers Yes Whether or not you want to rename your samples. These names will be used to identify cells in the processed data objects. par_new_sample_names_spaceranger NULL New sample names. Make sure they are defined in the same order as 'par_sample_names'. par_paired_end_seq_spaceranger Yes Whether or not paired-end sequencing was performed. par_ref_dir_grch_spaceranger /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh38/genome/10xGenomics/refdata-cellranger-GRCh38-3.0.0 Path to reference genome for FASTQ alignment. 10X Genomics reference genomes are available for download. For more information see the 10X Genomics documentation. par_fastqs_spaceranger NULL Path to directory containing the FASTQ files. This directory should only contain FASTQ files for the experiment. par_image_spaceranger NULL Path to the brightfield tissue image (.tif) for the corresponding tissue section. par_slide_spaceranger NULL Identifier for the Visium slide used. This must match the slide ID printed on the physical slide and encoded in the .gpr file. par_slidefile_spaceranger TEMP Path to the GenePix results (.gpr) file for the slide, which contains spatial barcode layout information. It's used to map tissue spots to spatial barcodes. par_area_spaceranger NULL Indicates the capture area (i.e., section) of the slide being processed. Commonly labeled as A1, B1, C1, D1, etc. This must match the area used for imaging and sample preparation. par_localcores_spaceranger 16 Number of CPU cores to use for the analysis. par_localmem_spaceranger=10 10 Amount of RAM (in GB) to allocate to the job. Given that SpaceRanger runs a user interface, it is recommended to run Step 1 in a screen , which will allow the the task to keep running if the connection to the HPC is broken. To execute Step 1, run the following code: screen -S pipeline PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 3 The resulting output files are deposited into /path/to/working/directory/Dataset1/step1 . The filtered expression matrix, features, and barcode files outputed by SpaceRanger are located in /path/to/working/directory/Dataset1/step3/sample/ouput_folder/outs/filtered_feature_bc_matrix . Note: If SpaceRanger was successfull, it will display Pipestance completed successfully! . If this message is not displayed, you should check the error logs in /path/to/working/directory/Dataset1/step3/sample/ouput_folder.log and re-run Step 1.","title":"Step 1: Run SpaceRangerer"},{"location":"SpatialRNAseq_Visium_HD/#step-2-data-preprocessing-and-standardization","text":"In Step 2, the spatial feature-barcode expression matrices are log-transformed and scaled using a standardized approach. Individual cells are filtered to retain only those barcodes specified in the metadata file provided by the original investigators. Metadata column names are standardized and appended to the count matrices. The processed data are saved as both Seurat and Scanpy objects. The following parameters are adjustable for Step 2 of the spatial RNAseq Visium HD track ( /path/to/working/directory/Dataset1/job_info/parameters/parameters.txt ): Column name Default Description par_meta_data_spatial NULL Path to investigator-provided metadata .csv file. par_barcodes_spatial NULL Column name in the investigator-provided metadata file describing the cell barcodes. par_sample_id_spatial NULL Column name in the investigator-provided metadata file describing the sample IDs. par_subject_id_spatial NULL Column name in the investigator-provided metadata file describing the Subject IDs. par_tissue_spatial NULL Column name in the investigator-provided metadata file describing the tissue type. par_tissue_region_spatial NULL Column name in the investigator-provided metadata file describing the tissue region. par_cell_type_main_spatial NULL Column name in the investigator-provided metadata file describing the main cell type. par_disease_status_main_spatial NULL Column name in the investigator-provided metadata file describing the disease status of the subject from which the cells were obtained. To execute Step 2, run the following code: PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 4 After running the Step 2, the following files will be available in /path/to/working/directory/Dataset1/step4 : Dataset1 \u2514\u2500\u2500 job_info \u251c\u2500\u2500 configs \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 step_3_spacerangerV1_Adult_Mouse_Brain_S5.log \u251c\u2500\u2500 parameters \u2502 \u2514\u2500\u2500 parameters.txt \u2514\u2500\u2500 summary_report.txt","title":"Step 2: Data Preprocessing and Standardization"},{"location":"SpatialRNAseq_Visium_HD/#data-upload-to-c-big","text":"","title":"Data upload to C-BIG"},{"location":"background/","text":"Background Open science is a pillar to The Montreal Neurological Institute\u2019s (The Neuro) patient-centered approach for scientific research. Central to this initiative is the C-BIG Repository , a comprehensive database that includes biospecimen samples, clinical data, imaging, and genetic information from individuals with neurological disorders, as well as controls. C-BIG provides publicly available data accessible to researchers worldwide, promoting collaboration and fostering collective efforts to improve patient care. Building on this foundation, we aim to establish a framework that will make all single-cell and spatial RNAseq data generated at The Neuro publicly available in a single location, thereby further expanding access to essential resources to accelerate scientific discovery. Multiple platforms are available to host public RNAseq data (e.g., Gene Expression Omnibus [GEO]); however, they often lack standardized protocols for data publication, leading to inconsistent nomenclature, data formats, and metadata, which pose challenges for future research by external groups. Additionally, the absence of uniform pre-processing pipelines prior to public upload can introduce variability, hindering the ability to conduct joint analyses across multiple independent datasets. We aim to address these limitations using a standardized framework for data publication, ensuring consistency across all RNAseq datasets on C-BIG. This document outlines the framework for making RNAseq data publicly available on C-BIG. We begin by detailing the standardized processing protocol used to ensure consistency across all uploaded data. We then describe the various formats in which data is available. Finally, we provide a step-by-step guide for administrators to apply the standardized processing pipelines to different data types. For any questions regarding the protocols outlined in this document, or for inquiries about uploading your data, please contact Michael Fiorini .","title":"Background"},{"location":"background/#background","text":"Open science is a pillar to The Montreal Neurological Institute\u2019s (The Neuro) patient-centered approach for scientific research. Central to this initiative is the C-BIG Repository , a comprehensive database that includes biospecimen samples, clinical data, imaging, and genetic information from individuals with neurological disorders, as well as controls. C-BIG provides publicly available data accessible to researchers worldwide, promoting collaboration and fostering collective efforts to improve patient care. Building on this foundation, we aim to establish a framework that will make all single-cell and spatial RNAseq data generated at The Neuro publicly available in a single location, thereby further expanding access to essential resources to accelerate scientific discovery. Multiple platforms are available to host public RNAseq data (e.g., Gene Expression Omnibus [GEO]); however, they often lack standardized protocols for data publication, leading to inconsistent nomenclature, data formats, and metadata, which pose challenges for future research by external groups. Additionally, the absence of uniform pre-processing pipelines prior to public upload can introduce variability, hindering the ability to conduct joint analyses across multiple independent datasets. We aim to address these limitations using a standardized framework for data publication, ensuring consistency across all RNAseq datasets on C-BIG. This document outlines the framework for making RNAseq data publicly available on C-BIG. We begin by detailing the standardized processing protocol used to ensure consistency across all uploaded data. We then describe the various formats in which data is available. Finally, we provide a step-by-step guide for administrators to apply the standardized processing pipelines to different data types. For any questions regarding the protocols outlined in this document, or for inquiries about uploading your data, please contact Michael Fiorini .","title":"Background"},{"location":"scRNAseq_10X_Genomics/","text":"Single-cell RNAseq pipeline: 10X Genomics Installation Step 0: Pipeline Set Up Step 1: Run CellRanger Step 2: Data Preprocessing and Standardization Data upload to C-BIG This tutorial provides step-by-step instructions for preparing single-cell RNA sequencing data from 10X Genomics for upload to the C-BIG repository. Installation To use the C-BIG RNAseq proessing pipeline, the CBIG_scRNAseq GitHub repository must be cloned onto your high performance computing (HPC) system. Administrators using the Digital Research Alliance of Canada HPC system can skip this step, as the pipeline is already installed on Narval at /lustre07/scratch/fiorini9/CBIG_pipe_07_11_25/CBIG_scRNAseq/cbig_scrna.slurm . Note that this is a temporary location. To clone the repository run the following code: mkdir /path/to/pipeline cd /path/to/pipeline git clone https://github.com/mfiorini9/CBIG_scRNAseq After running the above code, the following files will be available in /path/to/pipeline : CBIG_scRNAseq \u251c\u2500\u2500 cbig_scrna.slurm \u2502 \u251c\u2500\u2500 launch \u2502 \u2502 \u2514\u2500\u2500 launch_cbig_scrna_slurm.sh \u2502 \u251c\u2500\u2500 launch_cbig_scrna.sh \u2502 \u251c\u2500\u2500 scrna \u2502 \u2502 \u251c\u2500\u2500 configs \u2502 \u2502 \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u2502 \u2502 \u251c\u2500\u2500 pars \u2502 \u2502 \u2502 \u2514\u2500\u2500 parameters.txt \u2502 \u2502 \u2514\u2500\u2500 scripts \u2502 \u2502 \u251c\u2500\u2500 step1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_cellranger_scrna_local.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_cellranger_scrna.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 scrna_step1_auto.R \u2502 \u2502 \u2502 \u2514\u2500\u2500 slurm.template \u2502 \u2502 \u251c\u2500\u2500 step2 \u2502 \u2502 \u2502 \u251c\u2500\u2500 pipeline_step2.sh \u2502 \u2502 \u2502 \u2514\u2500\u2500 scrna_step2.R \u2502 \u2502 \u251c\u2500\u2500 step3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_spaceranger_scrna.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 scrna_step3_auto.R \u2502 \u2502 \u2502 \u2514\u2500\u2500 slurm.template \u2502 \u2502 \u2514\u2500\u2500 step4 \u2502 \u2502 \u251c\u2500\u2500 pipeline_step4.sh \u2502 \u2502 \u251c\u2500\u2500 spatial_rna_step4.py \u2502 \u2502 \u2514\u2500\u2500 spatial_rna_step4.R \u2502 \u251c\u2500\u2500 soft \u2502 \u2502 \u2514\u2500\u2500 R \u2502 \u2502 \u251c\u2500\u2500 install_packages.R \u2502 \u2502 \u251c\u2500\u2500 install_packages.sh \u2502 \u2502 \u2514\u2500\u2500 R.library.ini \u2502 \u2514\u2500\u2500 tools \u2502 \u2514\u2500\u2500 utils.sh \u251c\u2500\u2500 LICENSE \u2514\u2500\u2500 README.md Note: The repository only needs to be cloned onto an HPC system once and can be used to process any number of independent datasets. Step 0: Pipeline Set Up After installation, a working directory and a pipeline instance specific to the dataset being processed must be created. Step 0 initiates the pipeline and generates all necessary parameter and configuration files. To execute Step 0, run the following code: mkdir /path/to/working/directory/Dataset1 cd /path/to/working/directory/Dataset1 PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 0 After running the Step 0, the following files will be available in /path/to/working/directory/Dataset1 : Dataset1 \u2514\u2500\u2500 job_info \u251c\u2500\u2500 configs \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 step_3_spacerangerV1_Adult_Mouse_Brain_S5.log \u251c\u2500\u2500 parameters \u2502 \u2514\u2500\u2500 parameters.txt \u2514\u2500\u2500 summary_report.txt The configs/ directory contains a configuration file which allows users to specify their job allocations (memory, threads, and walltime) for each analytical step using the Slurm Workload Manager; The logs/ directory records the events of each analytical step; The parameters/ directory contains adjustable, step-specific text files which allow users to define the execution parameters for each analytical step. Note: The text files can be opened and modified through nano, vim, or a file manager system like cyberduck. Step 1: Run CellRanger In Step 1, gene expression matrices are generated from 10X Genomics FASTQ files provided by the original investigators using the CellRanger counts pipeline. The following parameters are adjustable for Step 1 of the single-cell RNAseq 10X Genomics track ( /path/to/working/directory/Dataset1/job_info/parameters/parameters.txt ): Column name Default Description par_automated_library_prep Yes Whether or not to perform automated library prep. Alternatively, you may set this parameter to \"no\" and manually prepare the libraries. par_fastq_directory NULL Path to directory containing the FASTQ files. This directory should only contain FASTQ files for the experiment. par_sample_names NULL The sample names used to name the FASTQ files according to CellRanger nomeclature. par_rename_samples Yes Whether or not you want to rename your samples. These names will be used to identify cells in the processed data objects. par_new_sample_names NULL New sample names. Make sure they are defined in the same order as 'par_sample_names'. par_paired_end_seq Yes Whether or not paired-end sequencing was performed. par_ref_dir_grch /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh38/genome/10xGenomics/refdata-cellranger-GRCh38-3.0.0 Path to reference genome for FASTQ alignment. 10X Genomics reference genomes are available for download. For more information see the 10X Genomics documentation. par_mempercode 30 For clusters whose job managers do not support memory requests, it is possible to request memory in the form of cores. This option will scale up the number of threads requested via the MRO_THREADS variable according to how much memory a stage requires when given to the ratio of memory on your nodes. par_include_introns No Whether or not to include intronic reads in the gene expression matrix. par_r1_length (optional) NULL Minimum number of bases to retain for R1 sequence of gene expression. par_r2_length (optional) NULL Minimum number of bases to retain for R2 sequence of gene expression. par_no_target_umi_filter (optional) NULL Whether or not to tirn of CellRanger's target UMI filtering subpipeline. par_expect_cells (optional) NULL Expected number of cells. By default, CellRanger's auto-estimate algorithm will be used. par_force_cells (optional) NULL Force the CellRanger count ipeline to use N cells. par_no_bam (optional) NULL Whether or not to skip the bam file generation in the CellRanger pipeline. Given that CellRanger runs a user interface, it is recommended to run Step 1 in a screen , which will allow the the task to keep running if the connection to the HPC is broken. To execute Step 1, run the following code: screen -S pipeline PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 1 The resulting output files are deposited into /path/to/working/directory/Dataset1/step1 . The filtered expression matrix, features, and barcode files outputed by CellRanger are located in /path/to/working/directory/Dataset1/step1/sample/ouput_folder/outs/filtered_feature_bc_matrix . Note: If CellRanger was successfull, it will display Pipestance completed successfully! . If this message is not displayed, you should check the error logs in /path/to/working/directory/Dataset1/step1/sample/ouput_folder.log and re-run Step 1. Step 2: Data Preprocessing and Standardization In Step 2, the feature-barcode expression matrices are log-transformed and scaled using a standardized approach. Individual cells are filtered to retain only those barcodes specified in the metadata file provided by the original investigators. Metadata column names are standardized and appended to the count matrices. The processed data are saved as both Seurat and Scanpy objects. The following parameters are adjustable for Step 2 of the single-cell RNAseq 10X Genomics track ( /path/to/working/directory/Dataset1/job_info/parameters/parameters.txt ): Column name Default Description par_meta_data NULL Path to investigator-provided metadata .csv file. par_barcodes NULL Column name in the investigator-provided metadata file describing the cell barcodes. par_sample_id NULL Column name in the investigator-provided metadata file describing the sample IDs. par_subject_id NULL Column name in the investigator-provided metadata file describing the Subject IDs. par_tissue NULL Column name in the investigator-provided metadata file describing the tissue type. par_tissue_region NULL Column name in the investigator-provided metadata file describing the tissue region. par_cell_type_main NULL Column name in the investigator-provided metadata file describing the main cell type. par_disease_status_main NULL Column name in the investigator-provided metadata file describing the disease status of the subject from which the cells were obtained. To execute Step 2, run the following code: PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 2 After running the Step 0, the following files will be available in /path/to/working/directory/Dataset1/step2 : Dataset1 \u2514\u2500\u2500 job_info \u251c\u2500\u2500 configs \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 step_3_spacerangerV1_Adult_Mouse_Brain_S5.log \u251c\u2500\u2500 parameters \u2502 \u2514\u2500\u2500 parameters.txt \u2514\u2500\u2500 summary_report.txt Data upload to C-BIG","title":"10X Genomics"},{"location":"scRNAseq_10X_Genomics/#single-cell-rnaseq-pipeline-10x-genomics","text":"Installation Step 0: Pipeline Set Up Step 1: Run CellRanger Step 2: Data Preprocessing and Standardization Data upload to C-BIG This tutorial provides step-by-step instructions for preparing single-cell RNA sequencing data from 10X Genomics for upload to the C-BIG repository.","title":"Single-cell RNAseq pipeline: 10X Genomics"},{"location":"scRNAseq_10X_Genomics/#installation","text":"To use the C-BIG RNAseq proessing pipeline, the CBIG_scRNAseq GitHub repository must be cloned onto your high performance computing (HPC) system. Administrators using the Digital Research Alliance of Canada HPC system can skip this step, as the pipeline is already installed on Narval at /lustre07/scratch/fiorini9/CBIG_pipe_07_11_25/CBIG_scRNAseq/cbig_scrna.slurm . Note that this is a temporary location. To clone the repository run the following code: mkdir /path/to/pipeline cd /path/to/pipeline git clone https://github.com/mfiorini9/CBIG_scRNAseq After running the above code, the following files will be available in /path/to/pipeline : CBIG_scRNAseq \u251c\u2500\u2500 cbig_scrna.slurm \u2502 \u251c\u2500\u2500 launch \u2502 \u2502 \u2514\u2500\u2500 launch_cbig_scrna_slurm.sh \u2502 \u251c\u2500\u2500 launch_cbig_scrna.sh \u2502 \u251c\u2500\u2500 scrna \u2502 \u2502 \u251c\u2500\u2500 configs \u2502 \u2502 \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u2502 \u2502 \u251c\u2500\u2500 pars \u2502 \u2502 \u2502 \u2514\u2500\u2500 parameters.txt \u2502 \u2502 \u2514\u2500\u2500 scripts \u2502 \u2502 \u251c\u2500\u2500 step1 \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_cellranger_scrna_local.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_cellranger_scrna.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 scrna_step1_auto.R \u2502 \u2502 \u2502 \u2514\u2500\u2500 slurm.template \u2502 \u2502 \u251c\u2500\u2500 step2 \u2502 \u2502 \u2502 \u251c\u2500\u2500 pipeline_step2.sh \u2502 \u2502 \u2502 \u2514\u2500\u2500 scrna_step2.R \u2502 \u2502 \u251c\u2500\u2500 step3 \u2502 \u2502 \u2502 \u251c\u2500\u2500 create_spaceranger_scrna.sh \u2502 \u2502 \u2502 \u251c\u2500\u2500 scrna_step3_auto.R \u2502 \u2502 \u2502 \u2514\u2500\u2500 slurm.template \u2502 \u2502 \u2514\u2500\u2500 step4 \u2502 \u2502 \u251c\u2500\u2500 pipeline_step4.sh \u2502 \u2502 \u251c\u2500\u2500 spatial_rna_step4.py \u2502 \u2502 \u2514\u2500\u2500 spatial_rna_step4.R \u2502 \u251c\u2500\u2500 soft \u2502 \u2502 \u2514\u2500\u2500 R \u2502 \u2502 \u251c\u2500\u2500 install_packages.R \u2502 \u2502 \u251c\u2500\u2500 install_packages.sh \u2502 \u2502 \u2514\u2500\u2500 R.library.ini \u2502 \u2514\u2500\u2500 tools \u2502 \u2514\u2500\u2500 utils.sh \u251c\u2500\u2500 LICENSE \u2514\u2500\u2500 README.md Note: The repository only needs to be cloned onto an HPC system once and can be used to process any number of independent datasets.","title":"Installation"},{"location":"scRNAseq_10X_Genomics/#step-0-pipeline-set-up","text":"After installation, a working directory and a pipeline instance specific to the dataset being processed must be created. Step 0 initiates the pipeline and generates all necessary parameter and configuration files. To execute Step 0, run the following code: mkdir /path/to/working/directory/Dataset1 cd /path/to/working/directory/Dataset1 PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 0 After running the Step 0, the following files will be available in /path/to/working/directory/Dataset1 : Dataset1 \u2514\u2500\u2500 job_info \u251c\u2500\u2500 configs \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 step_3_spacerangerV1_Adult_Mouse_Brain_S5.log \u251c\u2500\u2500 parameters \u2502 \u2514\u2500\u2500 parameters.txt \u2514\u2500\u2500 summary_report.txt The configs/ directory contains a configuration file which allows users to specify their job allocations (memory, threads, and walltime) for each analytical step using the Slurm Workload Manager; The logs/ directory records the events of each analytical step; The parameters/ directory contains adjustable, step-specific text files which allow users to define the execution parameters for each analytical step. Note: The text files can be opened and modified through nano, vim, or a file manager system like cyberduck.","title":"Step 0: Pipeline Set Up"},{"location":"scRNAseq_10X_Genomics/#step-1-run-cellranger","text":"In Step 1, gene expression matrices are generated from 10X Genomics FASTQ files provided by the original investigators using the CellRanger counts pipeline. The following parameters are adjustable for Step 1 of the single-cell RNAseq 10X Genomics track ( /path/to/working/directory/Dataset1/job_info/parameters/parameters.txt ): Column name Default Description par_automated_library_prep Yes Whether or not to perform automated library prep. Alternatively, you may set this parameter to \"no\" and manually prepare the libraries. par_fastq_directory NULL Path to directory containing the FASTQ files. This directory should only contain FASTQ files for the experiment. par_sample_names NULL The sample names used to name the FASTQ files according to CellRanger nomeclature. par_rename_samples Yes Whether or not you want to rename your samples. These names will be used to identify cells in the processed data objects. par_new_sample_names NULL New sample names. Make sure they are defined in the same order as 'par_sample_names'. par_paired_end_seq Yes Whether or not paired-end sequencing was performed. par_ref_dir_grch /cvmfs/soft.mugqic/CentOS6/genomes/species/Homo_sapiens.GRCh38/genome/10xGenomics/refdata-cellranger-GRCh38-3.0.0 Path to reference genome for FASTQ alignment. 10X Genomics reference genomes are available for download. For more information see the 10X Genomics documentation. par_mempercode 30 For clusters whose job managers do not support memory requests, it is possible to request memory in the form of cores. This option will scale up the number of threads requested via the MRO_THREADS variable according to how much memory a stage requires when given to the ratio of memory on your nodes. par_include_introns No Whether or not to include intronic reads in the gene expression matrix. par_r1_length (optional) NULL Minimum number of bases to retain for R1 sequence of gene expression. par_r2_length (optional) NULL Minimum number of bases to retain for R2 sequence of gene expression. par_no_target_umi_filter (optional) NULL Whether or not to tirn of CellRanger's target UMI filtering subpipeline. par_expect_cells (optional) NULL Expected number of cells. By default, CellRanger's auto-estimate algorithm will be used. par_force_cells (optional) NULL Force the CellRanger count ipeline to use N cells. par_no_bam (optional) NULL Whether or not to skip the bam file generation in the CellRanger pipeline. Given that CellRanger runs a user interface, it is recommended to run Step 1 in a screen , which will allow the the task to keep running if the connection to the HPC is broken. To execute Step 1, run the following code: screen -S pipeline PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 1 The resulting output files are deposited into /path/to/working/directory/Dataset1/step1 . The filtered expression matrix, features, and barcode files outputed by CellRanger are located in /path/to/working/directory/Dataset1/step1/sample/ouput_folder/outs/filtered_feature_bc_matrix . Note: If CellRanger was successfull, it will display Pipestance completed successfully! . If this message is not displayed, you should check the error logs in /path/to/working/directory/Dataset1/step1/sample/ouput_folder.log and re-run Step 1.","title":"Step 1: Run CellRanger"},{"location":"scRNAseq_10X_Genomics/#step-2-data-preprocessing-and-standardization","text":"In Step 2, the feature-barcode expression matrices are log-transformed and scaled using a standardized approach. Individual cells are filtered to retain only those barcodes specified in the metadata file provided by the original investigators. Metadata column names are standardized and appended to the count matrices. The processed data are saved as both Seurat and Scanpy objects. The following parameters are adjustable for Step 2 of the single-cell RNAseq 10X Genomics track ( /path/to/working/directory/Dataset1/job_info/parameters/parameters.txt ): Column name Default Description par_meta_data NULL Path to investigator-provided metadata .csv file. par_barcodes NULL Column name in the investigator-provided metadata file describing the cell barcodes. par_sample_id NULL Column name in the investigator-provided metadata file describing the sample IDs. par_subject_id NULL Column name in the investigator-provided metadata file describing the Subject IDs. par_tissue NULL Column name in the investigator-provided metadata file describing the tissue type. par_tissue_region NULL Column name in the investigator-provided metadata file describing the tissue region. par_cell_type_main NULL Column name in the investigator-provided metadata file describing the main cell type. par_disease_status_main NULL Column name in the investigator-provided metadata file describing the disease status of the subject from which the cells were obtained. To execute Step 2, run the following code: PIPELINE_HOME=/path/to/pipeline/CBIG_scRNAseq/cbig_scrna.slurm PIPELINE_PWD=/path/to/working/directory/Dataset1 cd $PIPELINE_PWD bash $PIPELINE_HOME/launch_cbig_scrna.sh \\ -d ${PIPELINE_PWD} \\ --steps 2 After running the Step 0, the following files will be available in /path/to/working/directory/Dataset1/step2 : Dataset1 \u2514\u2500\u2500 job_info \u251c\u2500\u2500 configs \u2502 \u2514\u2500\u2500 cbig_scrna_config.ini \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 step_3_spacerangerV1_Adult_Mouse_Brain_S5.log \u251c\u2500\u2500 parameters \u2502 \u2514\u2500\u2500 parameters.txt \u2514\u2500\u2500 summary_report.txt","title":"Step 2: Data Preprocessing and Standardization"},{"location":"scRNAseq_10X_Genomics/#data-upload-to-c-big","text":"","title":"Data upload to C-BIG"},{"location":"scRNAseq_ParseBio/","text":"Single-cell RNAseq pipeline: ParseBiosciences Coming soon.","title":"ParseBiosciences"},{"location":"scRNAseq_ParseBio/#single-cell-rnaseq-pipeline-parsebiosciences","text":"Coming soon.","title":"Single-cell RNAseq pipeline: ParseBiosciences"}]}